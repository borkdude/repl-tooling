version: 2.1
defaults: &defaults
  docker:
    - image: circleci/node:lts

jobs:
  test:
    <<: *defaults
    steps:
      - checkout
      - run:
          command: ./scripts/ci
          when: always
      - store_artifacts:
          path: ~/video
      - run: ls target -lh
      - persist_to_workspace:
          root: '.'
          paths:
            - target
            - node_modules

  publish:
    <<: *defaults
    steps:
      - checkout
      - run: sudo apt-get -y install openjdk-8-jdk
      - run: wget https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein
      - run: chmod +x lein
      - run: sudo mv lein  /usr/bin/
      - run: ./scripts/deploy.sh

  babashka:
    <<: *defaults
    steps:
      - attach_workspace:
          at: '.'
      - run: wget https://github.com/borkdude/babashka/releases/download/v0.1.3/babashka-0.1.3-linux-amd64.zip
      - run: unzip babashka*zip
      - run: ./bb --socket-repl 4444 & sleep 2; node target/fixture.js babashka.bb

  joker:
    <<: *defaults
    steps:
      - attach_workspace:
          at: '.'
      - run: wget https://github.com/candid82/joker/releases/download/v0.15.6/joker-0.15.6-linux-amd64.zip
      - run: unzip joker*.zip
      - run: ./joker --exit-to-repl localhost:4444 & sleep 2; node target/fixture.js joker.joke

  lumo:
    <<: *defaults
    steps:
      - attach_workspace:
          at: '.'
      - run: sudo apt install tmux
      - run: sudo npm install -g lumo-cljs --unsafe-perm
      - run: tmux new-session -d
      - run: tmux send-keys 'lumo -n 4444 ' Enter
      - run: sleep 5; node target/fixture.js lumo.cljs

  clojerl:
    docker:
      - image: erlang
    steps:
      - attach_workspace:
          at: '.'
      - run: apt-get update
      - run: apt-get install -y git npm nodejs rlwrap tmux
      - run: echo '{erl_opts, [debug_info]}. {deps, [{clojerl, {git, "https://github.com/clojerl/clojerl", {branch, "master"}}}]}. {plugins, [{rebar3_clojerl, "0.8.4"}]}.' > rebar.config
      - run: echo ":foo" | rebar3 clojerl repl
      - run: tmux new-session -d
      - run: tmux send-keys 'rebar3 clojerl repl' Enter
      - run: tmux send-keys "(do (require 'clojure.core.server) (clojure.core.server/start-server {:name \"socket-repl\" :port 4444 :accept 'clojure.main/repl :address \"localhost\"}))" Enter
      - run: sleep 20; node target/fixture.js clojerl.clje

  clojureclr:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:5.0
    steps:
      - attach_workspace:
          at: '.'
      - run: apt-get update
      - run: apt-get install -y tmux nodejs
      - run: dotnet tool install --global --version 1.10.0-alpha1 Clojure.Main
      - run: tmux new-session -d
      - run: tmux send-keys "/root/.dotnet/tools/Clojure.Main -e \"(clojure.core.server/start-server {:name \\\"test\\\" :port 4444 :accept 'clojure.core.server/repl})(read)\"" Enter
      - run: sleep 20; node target/fixture.js somefile.clj

prepost: &prepost
  pre-steps:
    - run: curl --request POST --header "PRIVATE-TOKEN: $GITLAB_TOKEN" "https://gitlab.com/api/v4/projects/clj-editors%2Frepl-tooling/statuses/$CIRCLE_SHA1?state=running&name=$CIRCLE_JOB&target_url=$CIRCLE_BUILD_URL
  post-steps:
    - run: curl --request POST --header "PRIVATE-TOKEN: $GITLAB_TOKEN" "https://gitlab.com/api/v4/projects/clj-editors%2Frepl-tooling/statuses/$CIRCLE_SHA1?state=success&name=$CIRCLE_JOB&target_url=$CIRCLE_BUILD_URL
      when: on_success
    - run: curl --request POST --header "PRIVATE-TOKEN: $GITLAB_TOKEN" "https://gitlab.com/api/v4/projects/clj-editors%2Frepl-tooling/statuses/$CIRCLE_SHA1?state=failed&name=$CIRCLE_JOB&target_url=$CIRCLE_BUILD_URL
      when: on_fail

workflows:
  version: 2
  default-workflow:
    jobs:
      - test:
          <<: *prepost
          filters:
            tags:
              only:
                - /^v.+/

      - babashka:
          <<: *prepost
          requires:
            - test
          filters:
            tags:
              only:
                - /^v.+/
      - joker:
          <<: *prepost
          requires:
            - test
          filters:
            tags:
              only:
                - /^v.+/
      - lumo:
          requires:
            - test
          filters:
            tags:
              only:
                - /^v.+/
      - clojerl:
          <<: *prepost
          requires:
            - test
          filters:
            tags:
              only:
                - /^v.+/
      - clojureclr:
          <<: *prepost
          requires:
            - test
          filters:
            tags:
              only:
                - /^v.+/

      - publish:
          <<: *prepost
          context: Clojure Libs
          requires:
            - babashka
            - joker
            - lumo
            # - clojerl
            - clojureclr
          filters:
            tags:
              only:
                - /^v.+/
            branches:
              only:
                - master
